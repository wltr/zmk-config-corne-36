/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/pointing.h>

&led_strip {
  chain-length = <27>;
};

&mt {
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
  quick-tap-ms = <200>;
};

&lt {
  tapping-term-ms = <200>;
  quick-tap-ms = <200>;
};

/ {
  combos {
    compatible = "zmk,combos";
    combo_lcmd {
      timeout-ms = <50>;
      require-prior-idle-ms = <100>;
      key-positions = <2 3>;
      bindings = <&kp LCMD>;
      layers = <0 1 2>;
    };
    combo_lctrl {
      timeout-ms = <50>;
      require-prior-idle-ms = <100>;
      key-positions = <14 15>;
      bindings = <&kp LCTRL>;
      layers = <0 1 2>;
    };
    combo_lalt {
      timeout-ms = <50>;
      require-prior-idle-ms = <100>;
      key-positions = <26 27>;
      bindings = <&kp LALT>;
      layers = <0 1 2>;
    };
    combo_rcmd {
      timeout-ms = <50>;
      require-prior-idle-ms = <100>;
      key-positions = <8 9>;
      bindings = <&kp RCMD>;
      layers = <0 1 2>;
    };
    combo_rctrl {
      timeout-ms = <50>;
      require-prior-idle-ms = <100>;
      key-positions = <20 21>;
      bindings = <&kp RCTRL>;
      layers = <0 1 2>;
    };
    combo_ralt {
      timeout-ms = <50>;
      require-prior-idle-ms = <100>;
      key-positions = <32 33>;
      bindings = <&kp RALT>;
      layers = <0 1 2>;
    };
    combo_mouse {
      timeout-ms = <50>;
      require-prior-idle-ms = <100>;
      key-positions = <37 40>;
      bindings = <&tog 3>;
    };
  };
};

/ {
  keymap {
    compatible = "zmk,keymap";
    default_layer {
// -------------------------------------------------------------------------------
// |     |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |     |
// |     |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |     |
// |     |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  |     |
// |                 | ESC | TAB |     |     |     | SPC | RET |                 |
// -------------------------------------------------------------------------------
bindings = <
  &trans &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &trans
  &trans &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &trans
  &trans &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &trans
  &mt LSHFT ESC &lt 1 TAB &trans &trans &lt 2 SPACE &mt RSHFT RET
>;
    };
    lower_layer {
// -------------------------------------------------------------------------------
// |     |BRIUP| LTOG| LHUI| LSAI| LBRI|     | HOME| END | PGUP| PGDN|VOLUP|     |
// |     |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  |     |
// |     |BRIDN| LEFF| LHUD| LSAD| LBRD|     | LFT | DWN |  UP | RGT |VOLDN|     |
// |                 |     |     |     |     |     | BSPC|     |                 |
// -------------------------------------------------------------------------------
bindings = <
  &trans &kp C_BRI_UP &rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &kp HOME &kp END &kp PG_UP &kp PG_DN &kp C_VOL_UP &trans
  &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
  &trans &kp C_BRI_DN &rgb_ug RGB_EFF &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp C_VOL_DN &trans
  &kp LSHFT &trans &trans &trans &kp BSPC &kp RSHFT
>;
    };
    raise_layer {
// -------------------------------------------------------------------------------
// |     |  !  |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |     |
// |     |  `  |  ~  |  '  |  "  | BCLR|     |  -  |  =  |  [  |  ]  |  \  |     |
// |     | BT0 | BT1 | BT2 | BT3 | BT4 |     |  _  |  +  |  {  |  }  | "|" |     |
// |                 |     | DEL |     |     |     |     |     |                 |
// -------------------------------------------------------------------------------
bindings = <
  &trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &trans
  &trans &kp GRAVE &kp TILDE &kp SQT &kp DQT &bt BT_CLR &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &trans
  &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp UNDER &kp PLUS &kp LBRC &kp RBRC &kp PIPE &trans
  &kp LSHFT &kp DEL &trans &trans &trans &kp RSHFT
>;
    };
    mouse_layer {
// -------------------------------------------------------------------------------
// |     |     |     |     |     |     |     |     |     |     |     |     |     |
// |     | MB4 | MCLK| RCLK| LCLK| MB5 |     | LFT | DWN |  UP | RGT |     |     |
// |     |     |     |     |     |     |     | SLFT| SDWN| SUP | SRGT|     |     |
// |                 | ESC |     |     |     |     |     | RET |                 |
// -------------------------------------------------------------------------------
bindings = <
  &none &none &none &none &none &none &none &none &none &none &none &none
  &none &mkp MB4 &mkp MCLK &mkp RCLK &mkp LCLK &mkp MB5 &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &none &none
  &none &none &none &none &none &none &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &none &none
  &kp ESC &none &none &none &none &kp RET
>;
    };
  };
};
